{"componentChunkName":"component---node-modules-scaleph-scaleph-gatsby-theme-site-templates-document-tsx","path":"/zh/docs/design/dataservice/overview","result":{"data":{"site":{"siteMetadata":{"title":"Scaleph","githubUrl":"https://github.com/flowerfine/scaleph","docsUrl":"https://github.com/flowerfine/scaleph-website","docs":[{"slug":"guide/kubernetes","title":{"zh":"Kubernetes","en":"Kubernetes"},"order":2},{"slug":"guide/install","title":{"zh":"安装","en":"Install"},"order":3},{"slug":"guide/quick-start","title":{"zh":"快速开始","en":"Quick Start"},"order":4},{"slug":"design/storage","title":{"zh":"存储功能","en":"Storage"},"order":3},{"slug":"design/kubernetes","title":{"zh":"Flink Kubernetes","en":"Flink Kubernetes"},"order":5},{"slug":"design/dataservice","title":{"zh":"数据服务","en":"Data Service"},"order":6},{"slug":"blog/program-design","title":{"zh":"程序设计","en":"Program Design"},"order":2},{"slug":"blog/test","title":{"zh":"测试","en":"Test"},"order":3},{"slug":"blog/container","title":{"zh":"容器","en":"Container"},"order":4},{"slug":"blog/spring","title":{"zh":"Spring","en":"Spring"},"order":5},{"slug":"blog/flink","title":{"zh":"Flink","en":"Flink"},"order":6},{"slug":"blog/devops","title":{"zh":"DevOps","en":"DevOps"},"order":7},{"slug":"blog/data-platform","title":{"zh":"数据中台","en":"Data Platform"},"order":8},{"slug":"blog/sql","title":{"zh":"SQL","en":"SQL"},"order":9},{"slug":"blog/archive","title":{"zh":"归档文档","en":"Archive"},"order":10}]},"pathPrefix":"/scaleph-website"},"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"scaleph"}]},{"type":"text","value":" 数据服务功能。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"参考文档："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://mp.weixin.qq.com/s/GsMJvRdm5VBJMQbP1EmUCg","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"性能、安全和稳定，DataAPI 为企业 API 保驾护航"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://mp.weixin.qq.com/s/ciepxnqmJLgaCVKKzJJOtw","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"快手统一数据服务平台设计与实践"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://mp.weixin.qq.com/s/GWpZpZWswaQAjRRHlrw_Hg","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"自定义API接口在Knife4j的Ui界面中显示"}]},{"type":"text","value":"。自定义接口如何通过 swagger 展示，可以参考这篇文章"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"数据服务介绍","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E6%95%B0%E6%8D%AE%E6%9C%8D%E5%8A%A1%E4%BB%8B%E7%BB%8D","ariaLabel":"数据服务介绍 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"数据服务介绍"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"1从数据管道自动化--数据到应用的自动化","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#1%E4%BB%8E%E6%95%B0%E6%8D%AE%E7%AE%A1%E9%81%93%E8%87%AA%E5%8A%A8%E5%8C%96--%E6%95%B0%E6%8D%AE%E5%88%B0%E5%BA%94%E7%94%A8%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96","ariaLabel":"1从数据管道自动化  数据到应用的自动化 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"1.从数据管道自动化 => 数据到应用的自动化"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大数据领域近年来百花齐放，各种优秀的开源软件层出不穷，而大数据这样的王谢堂前燕也慢慢地开始飞往寻常百姓家。基础问题的解决也改变了大数据搬砖工的日常，一部分开发者转变为平台工具的开发者，从数据的采集开始，确定采集的内容、位置和方式，到数据的提取、转换、合并，到最后的分析数据、数据可视化的整个过程构建成一个覆盖数据的生产计算使用的全部生命周期的平台，形成一个自动化的数据管道，而另一部分则变为平台工具的使用者，增量批量的拉取数据，清洗转换，构建主题域形成数据仓库，为公司业务提供数据决策支持。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据服务属于平台工具的一环，数据经过计算后入仓供 ad-hoc 和报表提供数据分析和可视化功能，但是数据为应用使用诸如为商家后台提供店铺流量分析等仍需要开发人员提供一对一的支持。数据服务为数据到应用的自动化提供解决方案。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"2数据的计算和使用在时间和空间上是分离的--数据读取","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#2%E6%95%B0%E6%8D%AE%E7%9A%84%E8%AE%A1%E7%AE%97%E5%92%8C%E4%BD%BF%E7%94%A8%E5%9C%A8%E6%97%B6%E9%97%B4%E5%92%8C%E7%A9%BA%E9%97%B4%E4%B8%8A%E6%98%AF%E5%88%86%E7%A6%BB%E7%9A%84--%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96","ariaLabel":"2数据的计算和使用在时间和空间上是分离的  数据读取 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"2.数据的计算和使用在时间和空间上是分离的 => 数据读取"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"很多微服务开发者自嘲为 CRUDer，每日的工作即为增删改查，在微服务开发中数据的插入和查询常常是同一个应用负责的。而在大数据领域中数据的计算由 flink、spark 计算引擎进行流式处理、批处理以解决数据的实时和离线需求，数据经过计算后进入存储系统供业务使用，数据是先在计算引擎中产生后在存储系统中被使用，数据的增删改在计算引擎中体现的，而数据分析、可视化、数据服务提供的都是数据的查询服务。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"3模板配置--快速数据-api-接口开发功能","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#3%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE--%E5%BF%AB%E9%80%9F%E6%95%B0%E6%8D%AE-api-%E6%8E%A5%E5%8F%A3%E5%BC%80%E5%8F%91%E5%8A%9F%E8%83%BD","ariaLabel":"3模板配置  快速数据 api 接口开发功能 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"3.模板+配置 => 快速数据 API 接口开发功能"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一个数据 API 开发流程往往是数据产品提出需求，数仓同学消化需求后实时/离线拉取数据进行数据开发，然后和数据 API 开发同学沟通交流数据的落表形式，数据 API 开发同学进行接口开发与应用同学进行对接联调等。过程冗长繁琐，交付慢效率低。比较理想的方式为数据同学在消化需求完成数据开发后以数据 API 接口的形式交付数据，缩减开发链路。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数仓同学常以 SQL 脚本和可视化地页面配置进行日常工作，数据服务为数仓同学提供存储系统的 query 模板功能，通过后台页面上传模板进行接口配置快速完成数据交付。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"4数据模板--微服务--sql-即接口--convert-sql-into-restful","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#4%E6%95%B0%E6%8D%AE%E6%A8%A1%E6%9D%BF--%E5%BE%AE%E6%9C%8D%E5%8A%A1--sql-%E5%8D%B3%E6%8E%A5%E5%8F%A3--convert-sql-into-restful","ariaLabel":"4数据模板  微服务  sql 即接口  convert sql into restful permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"4.数据模板 + 微服务 => SQL 即接口 => convert sql into RESTful"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据服务适配为存储系统提供适配，提供模板化的 query 配置，需要使用方提供请求参数、返回结构和 query，以微服务的形式提供快速数据 API 开发能力。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因为对 SQL 认可度的提高，大数据领域从计算引擎到分析引擎都在提供 SQL 支持，借助存储系统 + 分析引擎提供的 SQL 能力，数据服务主要支持 SQL 模板。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"java 语言在微服务领域建立了稳固的生态，常见的微服务接口有 rpc、http 两种，而 http 协议因为在互联网界的主流地位轻松击败了难以跨语言、需要 IDL （interface description language）支持的 rpc 协议。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据服务的核心能力为将用户提供的 sql 转化为一个 RESTful 接口。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"数据引擎","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E6%95%B0%E6%8D%AE%E5%BC%95%E6%93%8E","ariaLabel":"数据引擎 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"数据引擎"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"1存储系统","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#1%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F","ariaLabel":"1存储系统 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"1.存储系统"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"基于不同范式而设计的存储系统有不同的使用场景，在微服务应用中常见的 mysql、redis、消息队列，而在大数据领域就更加多样。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"常见的存储系统有关系型数据库 mysql 以及解决传统 DRDMS 分布式能力不足的NewSQL 如 tidb，NoSQL 类型的如常用作高速缓存的 redis、文档型数据库 mongodb，搜索引擎 elasticsearch、solr，大数据领域为了支持海量数据存储、读写和分析而多采用存储与计算分离的架构如hdfs、oss、hive、presto等，存储流批一体技术的发展而出现的基于文件系统的hudi、databricks、iceberg方案和基于消息队列的 kafka、pulsar。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"2模板选型","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#2%E6%A8%A1%E6%9D%BF%E9%80%89%E5%9E%8B","ariaLabel":"2模板选型 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"2.模板选型"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"sql（Structured Query Language）为一门与存储系统无关的查询语言，常见于 DRDMS。近年来对于 sql 认可度的提高，计算引擎分析引擎掀起了一股 sql 化开发计算任务和执行分析查询的风潮，数据引擎提供对 sql 模板的支持是最核心的功能，而像 presto 这样的分析引擎的发展也为使用 sql 查询不支持 sql 标准的存储系统提供了解决方案，因此数据引擎对于存储系统的适配通过 sql 完成，以 sql 作为查询模板。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在微服务开发中常以 jpa、mybatis 作为 orm 框架，mybatis 提供的接口 + xml 绑定的方式很适合作为数据模板开发的一个思路。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据引擎需要提供请求参数 + sql模板 + 返回结果的配置模板，而mybatis 的 xml 配置文件提供了类似的功能，数据引擎对开源框架 mybatis 进行二次开发，去除了增删改、事务、接口绑定等能力，适配数据引擎需要改造了缓存功能，增加了容灾配置（熔断，限流，超时等）。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"3微服务选型","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#3%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%89%E5%9E%8B","ariaLabel":"3微服务选型 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"3.微服务选型"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"国内常用的主流微服务框架为 spring cloud 和 dubbo，分别以 http 协议和 rpc 协议进行服务通信，这些框架面向开发者为微服务开发提供各种服务治理、流量管理等功能，应用本身的功能通过 POJO 的形式开发。但是到了数据服务中在使用这些框架就需要解决两个问题：如何提供代表应用业务的 POJO 和执行动态的服务生成和销毁问题？"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"springmvc + dubbo 阶段。通过代码生成技术，为数据模板生成正常开发流程中需要开发者编码的 controller、interface 和 interface impl，并在运行时（非应用正常启动时扫描注册）动态注册下线服务，打通 springmvc、dubbo框架。需要处理复杂的类加载机制小心处理代码生成的类，兼容不同框架间的代码生成技术，深入框架的底层让动态生成的服务能够与框架无缝衔接。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"dubbo框架 dubbo 协议 + rest 协议阶段。为了避免同时维护两套框架，使用 dubbo 框架的 rest 协议代替 springmvc 提供 RESTful 服务，实现一种框架两种服务。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"急于 springmvc 的二次开发。本质上 springmvc 和 dubbo 框架都是面向的开发，需要大量的 POJO 来实现业务。这与数据服务的目的皆然相悖，数据服务通过 pre-made decision 基于规则提供统一的服务，虽然使用代码生成打通了数据模板和框架，但是过于笨重，扩充功能困难。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据服务和使用 spring cloud、dubbo 构建微服务不一样，数据服务的核心逻辑在于执行数据模板，功能已经实现，它需要对外提供服务打通数据引擎和外面的世界，换句话说它只需要个服务层，能够实现外界通过网络实现调用数据模板即可。而众多的 web 服务框架的目的都是帮助开发者实现一个服务端，外界和服务端的通信属于 web 服务框架内部的功能，无需开发者感知。根据数据服务的需要开发一个 web 服务器势在必行。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"深入研究了 springmvc、dubbo 的这两个 http、tcp 服务端实现后，基于 springmvc 进行二次开发，直接将数据模板本身动态注册、移出路由表实现服务的注册和下线功能。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"4缓存","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#4%E7%BC%93%E5%AD%98","ariaLabel":"4缓存 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"4.缓存"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"缓存是一种使用空间换时间的加速 API 性能的技术，数据服务内置了redis和本地缓存，数据模板可以选择使用其中一种、二种或不使用缓存。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据服务提供的是大数据这个垂直领域的快速 API 开发功能，数据的增删改行为是体现在计算引擎中的，数据服务难以感知到存储系统中数据的变动进而主动更新缓存，保证缓存和存储系统中数据的一致性，因此注意使用缓存会人为增加数据的延迟。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"5容灾","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#5%E5%AE%B9%E7%81%BE","ariaLabel":"5容灾 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"5.容灾"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"数据服务基于 resilience4j 提供了单机的容灾功能，支持熔断、限流、限制执行线程数、超时 和 重试。"}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E6%95%B0%E6%8D%AE%E6%9C%8D%E5%8A%A1%E4%BB%8B%E7%BB%8D\">数据服务介绍</a></p>\n<ul>\n<li><a href=\"#1%E4%BB%8E%E6%95%B0%E6%8D%AE%E7%AE%A1%E9%81%93%E8%87%AA%E5%8A%A8%E5%8C%96--%E6%95%B0%E6%8D%AE%E5%88%B0%E5%BA%94%E7%94%A8%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96\">1.从数据管道自动化 => 数据到应用的自动化</a></li>\n<li><a href=\"#2%E6%95%B0%E6%8D%AE%E7%9A%84%E8%AE%A1%E7%AE%97%E5%92%8C%E4%BD%BF%E7%94%A8%E5%9C%A8%E6%97%B6%E9%97%B4%E5%92%8C%E7%A9%BA%E9%97%B4%E4%B8%8A%E6%98%AF%E5%88%86%E7%A6%BB%E7%9A%84--%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96\">2.数据的计算和使用在时间和空间上是分离的 => 数据读取</a></li>\n<li><a href=\"#3%E6%A8%A1%E6%9D%BF%E9%85%8D%E7%BD%AE--%E5%BF%AB%E9%80%9F%E6%95%B0%E6%8D%AE-api-%E6%8E%A5%E5%8F%A3%E5%BC%80%E5%8F%91%E5%8A%9F%E8%83%BD\">3.模板+配置 => 快速数据 API 接口开发功能</a></li>\n<li><a href=\"#4%E6%95%B0%E6%8D%AE%E6%A8%A1%E6%9D%BF--%E5%BE%AE%E6%9C%8D%E5%8A%A1--sql-%E5%8D%B3%E6%8E%A5%E5%8F%A3--convert-sql-into-restful\">4.数据模板 + 微服务 => SQL 即接口 => convert sql into RESTful</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%95%B0%E6%8D%AE%E5%BC%95%E6%93%8E\">数据引擎</a></p>\n<ul>\n<li><a href=\"#1%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F\">1.存储系统</a></li>\n<li><a href=\"#2%E6%A8%A1%E6%9D%BF%E9%80%89%E5%9E%8B\">2.模板选型</a></li>\n<li><a href=\"#3%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%80%89%E5%9E%8B\">3.微服务选型</a></li>\n<li><a href=\"#4%E7%BC%93%E5%AD%98\">4.缓存</a></li>\n<li><a href=\"#5%E5%AE%B9%E7%81%BE\">5.容灾</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/zh/docs/design/dataservice/overview"},"frontmatter":{"title":"概览"},"parent":{"relativePath":"design/dataservice/overview.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/zh/docs/guide/overview"},"frontmatter":{"title":"概览","order":0}}},{"node":{"fields":{"slug":"/zh/docs/roadmap/roadmap"},"frontmatter":{"title":"路线图","order":1}}},{"node":{"fields":{"slug":"/zh/docs/guide/why"},"frontmatter":{"title":"项目初衷","order":1}}},{"node":{"fields":{"slug":"/zh/docs/guide/quick-start/initialize"},"frontmatter":{"title":"初始化系统","order":1}}},{"node":{"fields":{"slug":"/zh/docs/guide/kubernetes/docker-desktop"},"frontmatter":{"title":"Docker Desktop","order":1}}},{"node":{"fields":{"slug":"/zh/docs/guide/install/docker"},"frontmatter":{"title":"Docker","order":1}}},{"node":{"fields":{"slug":"/zh/docs/faq/faq"},"frontmatter":{"title":"FAQ","order":1}}},{"node":{"fields":{"slug":"/zh/docs/design/design"},"frontmatter":{"title":"功能设计","order":1}}},{"node":{"fields":{"slug":"/zh/docs/design/version/version"},"frontmatter":{"title":"概述","order":1}}},{"node":{"fields":{"slug":"/zh/docs/design/storage/storage"},"frontmatter":{"title":"存储模块","order":1}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/kubernetes"},"frontmatter":{"title":"Flink Kubernetes","order":1}}},{"node":{"fields":{"slug":"/zh/docs/design/dataservice/overview"},"frontmatter":{"title":"概览","order":1}}},{"node":{"fields":{"slug":"/zh/docs/contribute/develop"},"frontmatter":{"title":"开发环境","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/overview"},"frontmatter":{"title":"介绍","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/test/test"},"frontmatter":{"title":"测试","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/sql/mysql"},"frontmatter":{"title":"MySQL","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/spring/spring"},"frontmatter":{"title":"Spring&Spring-Boot","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/program-design/tree"},"frontmatter":{"title":"树形结构","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/flink/flink"},"frontmatter":{"title":"Flink","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/devops/github"},"frontmatter":{"title":"Github","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/data-platform/summary"},"frontmatter":{"title":"总结","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/container/docker"},"frontmatter":{"title":"Docker","order":1}}},{"node":{"fields":{"slug":"/zh/docs/blog/archive/deploy"},"frontmatter":{"title":"部署","order":1}}},{"node":{"fields":{"slug":"/zh/docs/sourcecode"},"frontmatter":{"title":"源码","order":2}}},{"node":{"fields":{"slug":"/zh/docs/guide/quick-start/flink_cluster"},"frontmatter":{"title":"Flink 集群","order":2}}},{"node":{"fields":{"slug":"/zh/docs/guide/kubernetes/minikube"},"frontmatter":{"title":"Minikube","order":2}}},{"node":{"fields":{"slug":"/zh/docs/guide/install/binary"},"frontmatter":{"title":"安装包","order":2}}},{"node":{"fields":{"slug":"/zh/docs/design/flink-job"},"frontmatter":{"title":"Flink 任务管理","order":2}}},{"node":{"fields":{"slug":"/zh/docs/design/version/design"},"frontmatter":{"title":"设计","order":2}}},{"node":{"fields":{"slug":"/zh/docs/design/storage/filesystem"},"frontmatter":{"title":"文件系统","order":2}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/options"},"frontmatter":{"title":"配置","order":2}}},{"node":{"fields":{"slug":"/zh/docs/contribute/sourcecode"},"frontmatter":{"title":"项目源码","order":2}}},{"node":{"fields":{"slug":"/zh/docs/blog/program-design/json-diff"},"frontmatter":{"title":"Json Diff&Merge","order":2}}},{"node":{"fields":{"slug":"/zh/docs/blog/flink/flink-platform"},"frontmatter":{"title":"Flink Platform","order":2}}},{"node":{"fields":{"slug":"/zh/docs/blog/devops/linux"},"frontmatter":{"title":"Linux","order":2}}},{"node":{"fields":{"slug":"/zh/docs/blog/data-platform/job"},"frontmatter":{"title":"Job Schedule","order":2}}},{"node":{"fields":{"slug":"/zh/docs/blog/container/minikube"},"frontmatter":{"title":"Minikube","order":2}}},{"node":{"fields":{"slug":"/zh/docs/guide/quick-start/job_seatunnel"},"frontmatter":{"title":"SeaTunnel 任务","order":3}}},{"node":{"fields":{"slug":"/zh/docs/guide/kubernetes/k3s"},"frontmatter":{"title":"K3S","order":3}}},{"node":{"fields":{"slug":"/zh/docs/guide/install/kubernetes"},"frontmatter":{"title":"Kubernetes","order":3}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/ingress"},"frontmatter":{"title":"Ingress","order":3}}},{"node":{"fields":{"slug":"/zh/docs/contribute/docker"},"frontmatter":{"title":"Docker","order":3}}},{"node":{"fields":{"slug":"/zh/docs/blog/program-design/software"},"frontmatter":{"title":"软件设计","order":3}}},{"node":{"fields":{"slug":"/zh/docs/blog/flink/flink-kubernetes-operator"},"frontmatter":{"title":"Flink Kubernetes Operator","order":3}}},{"node":{"fields":{"slug":"/zh/docs/blog/data-platform/bi"},"frontmatter":{"title":"BI","order":3}}},{"node":{"fields":{"slug":"/zh/docs/blog/container/k3s-doc"},"frontmatter":{"title":"文档汇总","order":3}}},{"node":{"fields":{"slug":"/zh/docs/guide/compile"},"frontmatter":{"title":"编译","order":4}}},{"node":{"fields":{"slug":"/zh/docs/guide/quick-start/job_jar"},"frontmatter":{"title":"Flink Jar 任务","order":4}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/additional-jar"},"frontmatter":{"title":"依赖Jar","order":4}}},{"node":{"fields":{"slug":"/zh/docs/contribute/cicd"},"frontmatter":{"title":"CI/CD","order":4}}},{"node":{"fields":{"slug":"/zh/docs/blog/program-design/debug"},"frontmatter":{"title":"问题排查","order":4}}},{"node":{"fields":{"slug":"/zh/docs/blog/flink/flink-sql-gateway"},"frontmatter":{"title":"Flink SQL Gateway","order":4}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/logging"},"frontmatter":{"title":"日志","order":5}}},{"node":{"fields":{"slug":"/zh/docs/contribute/contribute"},"frontmatter":{"title":"如何贡献","order":5}}},{"node":{"fields":{"slug":"/zh/docs/blog/program-design/interview"},"frontmatter":{"title":"面试题","order":5}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/sql"},"frontmatter":{"title":"SQL","order":6}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/python"},"frontmatter":{"title":"Python","order":7}}},{"node":{"fields":{"slug":"/zh/docs/design/kubernetes/image"},"frontmatter":{"title":"镜像","order":8}}}]}},"pageContext":{"examples":[]}},"staticQueryHashes":["3000541721","569997913"]}